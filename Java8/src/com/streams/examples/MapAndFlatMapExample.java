package com.streams.examples;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class MapAndFlatMapExample {

	public static void main(String args[]) { // foods which helps in weight loss
		List<String> loseWeight = new ArrayList<>();
		loseWeight.add("avocados");
		loseWeight.add("beans");
		loseWeight.add("salad");
		loseWeight.add("oats");
		loseWeight.add("broccoli");
		System.out.println("list of String : " + loseWeight);

		// let's use map() method to convert list of weight
		// lose food, which are String to list of ints
		// which are length of each food String

		List<Integer> listOfInts = loseWeight.stream().map(s -> s.length()).collect(Collectors.toList());
		System.out.println("list of ints generate by map(): " + listOfInts);

		// flatMap() example, let's first creat a list of list

		List<List<Integer>> listOfListOfNumber = new ArrayList<>();
		listOfListOfNumber.add(Arrays.asList(2, 4));
		listOfListOfNumber.add(Arrays.asList(3, 9));
		listOfListOfNumber.add(Arrays.asList(4, 16));
		System.out.println("list of list : " + listOfListOfNumber);

		// let's use flatMap() to flatten this list into // list of integers
		// i.e. 2,4,3,9,4,16

		List<Integer> listOfIntegers = (List<Integer>) listOfListOfNumber.stream().flatMap(list -> list.stream())
				.collect(Collectors.toList());
		System.out.println("list of numbers generated by flatMap : " + listOfIntegers);
		
		List<Stream<Integer>> listOfInts123 = listOfListOfNumber.stream().map(list -> list.stream())
				.collect(Collectors.toList());
		
		System.out.println("list of numbers generated by Map : " + listOfInts123);

	}
}
